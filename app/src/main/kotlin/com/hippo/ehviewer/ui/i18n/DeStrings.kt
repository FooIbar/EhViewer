package com.hippo.ehviewer.ui.i18n

object DeStrings : Strings by EnStrings {
    override val homepage = "Startseite"
    override val subscription = "Gefolgte Etiketten"
    override val whatsHot = "Beliebt"
    override val favourite = "Lesezeichen"
    override val history = "Verlauf"
    override val downloads = "Downloads"
    override val settings = "Einstellungen"
    override val username = "Benutzername"
    override val password = "Kennwort"
    override val signIn = "Anmelden"
    override val register = "Konto erstellen"
    override val signInViaWebview = "Mit WebView anmelden"
    override val signInFirst = "Melde dich zunächst an"
    override val textIsEmpty = "Der Text wird nicht eingegeben"
    override val waring = "Achtung"
    override val invalidDownloadLocation = "Der Downloadpfad ist nicht verfügbar. Geh zu die Einstellungen und stelle einen neue Pfad fest."
    override val errorTimeout = "Timeout"
    override val errorUnknownHost = "Unbekannter Hostcomputer"
    override val errorRedirection = "Zu viele Umleitungen"
    override val errorSocket = "Netwerkfehler"
    override val errorUnknown = "Unbekannter Fehler"
    override val errorCantFindActivity = "Die Application wurde nicht gefunden"
    override val errorCannotParseTheUrl = "Die URL konnte analysiert nicht werden"
    override val errorDecodingFailed = "Dekodierung fehlgeschlagen"
    override val errorReadingFailed = "Lesefehler"
    override val errorOutOfRange = "Außer Reichweite"
    override val errorParseError = "Analyzierungfehler"
    override val error509 = "509"
    override val errorInvalidUrl = "URL ungültig"
    override val errorGetPtokenError = "Fehler beim Erhalten pTokens"
    override val errorCantSaveImage = "Das Bild konnte nicht gespeichert werden"
    override val errorInvalidNumber = "Nummer ungültig"
    override val getIt = "Verstanden"
    override val galleryListSearchBarHintExhentai = "ExHentai durchsuchen"
    override val galleryListSearchBarHintEHentai = "E-Hentai durchsuchen"
    override val galleryListEmptyHit = "Die Welt ist so groß und der Panda sitzt ganz allein"
    override val keywordSearch = "Suche nach dem Schlüsselwort"
    override val imageSearch = "Suche nach einem Bild"
    override val searchImage = "Suche nach einem Bild"
    override val searchSh = "Gelöschte Galerien anzeigen"
    override val searchSto = "Nur die Galerien mit Torrentdateien anzeigen"
    override val searchSr = "Mindestpunktzahl"
    override val searchSpTo = "zu"
    override val searchSf = "Standard-Filter deaktivieren für:"
    override val searchSfl = "Sprache"
    override val searchSfu = "Uploader"
    override val searchSft = "Etikett"
    override val selectImage = "Bild wählen"
    override val selectImageFirst = "Wähle ein Bild"
    override val addToFavourites = "Zu den Favoriten hinzufügen"
    override val removeFromFavourites = "Aus den Favoriten entfernen"
    override val quickSearch = "Sofortsuche"
    override val quickSearchTip = "Tippe an +, um eine Sofortsuche hinzuzufügen"
    override val addQuickSearchDialogTitle = "Sofortsuche hinzufügen"
    override val nameIsEmpty = "Gib den Name ein"
    override val delete = "Löschen"
    override val addQuickSearchTip = "Das Suchergebnis wird als eine Sofortsuche gespeichert. Suche etwas zuerst, um das Ergebnis zu speichern."
    override val readme = "README"
    override val imageSearchNotQuickSearch = "Die Bildsuchen können als Sofortsuchen gespeichert nicht werden."
    override val duplicateQuickSearch = { a: String -> "Eine Sofortsuche, deren Name ist $a, bereits besteht." }
    override val duplicateName = "Dieser Name ist bereits besetzt."
    override val goToHint = { a: Int, b: Int -> "Seite $a, insgesamt $b Seiten" }
    override val star2 = "2 Sterne"
    override val star3 = "3 Sterne"
    override val star4 = "4 Sterne"
    override val star5 = "5 Sterne"
    override val download = "Herunterladen"
    override val read = "Lesen"
    override val share = "Teilen"
    override val rate = "Bewerten"
    override val similarGallery = "Ähnlich"
    override val searchCover = "Nach dem Umschlag suchen"
    override val noTags = "Kein Etikett"
    override val noComments = "Kein Kommentar"
    override val noMoreComments = "Keine weiteren Kommentare"
    override val moreComment = "Weitere Kommentare"
    override val refresh = "Neu laden"
    override val openInOtherApp = "Öffnen mit …"
    override val rateSuccessfully = "Bewertung erfolgreich"
    override val rateFailed = "Bewertung fehlgeschlagen"
    override val noTorrents = "Keine Torrentdatei"
    override val torrents = "Torrentdateien"
    override val notFavorited = "Nicht zu Favoriten hinzugefügt"
    override val addFavoritesDialogTitle = "Zu Favoriten hinzufügen"
    override val addToFavoriteSuccess = "Zu Favoriten hinzugefügt"
    override val removeFromFavoriteSuccess = "Aus Favoriten entfernt"
    override val addToFavoriteFailure = "Fehler beim Hinzufügen zu Favoriten"
    override val removeFromFavoriteFailure = "Fehler beim Entfernen aus Favoriten"
    override val filterTheUploader = { a: String -> "Uploader \"$a\" blockieren?" }
    override val filterTheTag = { a: String -> "Etikett \"$a\" blockieren?" }
    override val filterAdded = "Element wurde blockiert."
    override val rating10 = "EIN MEISTERSTÜCK"
    override val rating9 = "WUNDERVOLL"
    override val rating8 = "SEHR GUT"
    override val rating7 = "GUT"
    override val rating6 = "NICHT SCHLECHT"
    override val rating5 = "MÄßIG"
    override val rating4 = "SCHLECHT"
    override val rating3 = "SCHRECKLICH"
    override val rating2 = "PEINLICH"
    override val rating1 = "UNERTRÄGLICH"
    override val rating0 = "KATASTROPHE"
    override val galleryInfo = "Galeriesinfomationen"
    override val copiedToClipboard = "Text in Zwischenablage kopiert"
    override val keyGid = "Gid"
    override val keyToken = "Token"
    override val keyUrl = "URL"
    override val keyTitle = "Titel"
    override val keyTitleJpn = "Japanischer Titel"
    override val keyThumb = "Vorschau"
    override val keyCategory = "Kategorie"
    override val keyUploader = "Uploader"
    override val keyPosted = "Hochladungsdatum"
    override val keyParent = "Elternteil"
    override val keyVisible = "Sichtbar?"
    override val keyLanguage = "Sprache"
    override val keyPages = "Seiten"
    override val keySize = "Größe"
    override val keyFavoriteCount = "Zahl der Hzfg zu Fav."
    override val keyFavorited = "Zu Fav. hinzugefügt"
    override val keyRatingCount = "Zahl der Bewertungen"
    override val keyRating = "Bewertung"
    override val keyTorrents = "Zahl der Torrents"
    override val keyTorrentUrl = "URL des Torrentdateis"
    override val favoredTimes = { a: Int -> "♥ $a" }
    override val ratingText = { a: String, b: Float, c: Int -> "%s (%.2f, %d)".format(a, b, c) }
    override val galleryComments = "Kommentare der Galerie"
    override val commentSuccessfully = "Kommentar erfolgreich gesendet"
    override val commentFailed = "Kommentar nicht gesendet"
    override val copyCommentText = "Inhalt des Kommentars kopieren"
    override val voteUp = "Für den Kommentar stimmen"
    override val cancelVoteUp = "Positive Stimmung abbrechen"
    override val voteDown = "Gegen den Kommentar stimmen"
    override val cancelVoteDown = "Negative Stimmung abbrechen"
    override val voteUpSuccessfully = "Positive Stimmung erfolgreich gesendet"
    override val cancelVoteUpSuccessfully = "Die negative Stimmung wurde abgebrochen"
    override val voteDownSuccessfully = "Negative Stimmung erfolgreich gesendet"
    override val cancelVoteDownSuccessfully = "Die negative Stimmung wurde abgebrochen"
    override val voteFailed = "Stimmung gescheitert"
    override val checkVoteStatus = "Details der Stimmungen anzeigen"
    override val goTo = "Gehe zu"
    override val sceneDownloadTitle = { a: String -> "Download - $a" }
    override val noDownloadInfo = "Downloads werden hier angezeigt"
    override val downloadStateNone = "Pausiert"
    override val downloadStateWait = "In der Warteschlange"
    override val downloadStateDownloading = "Download läuft"
    override val downloadStateDownloaded = "Abgeschlossen"
    override val downloadStateFailed = "Gescheitert"
    override val downloadStateFailed2 = { a: Int -> "$a wurde noch nicht abgeschlossen" }
    override val downloadStateFinish = "Abgeschlossen"
    override val stat509AlertTitle = "509 Fehler"
    override val stat509AlertText = "Die Genze der Downloads wurde erreichet. Versuche noch einmals später,"
    override val statDownloadDoneTitle = "Download abgeschlossen"
    override val statDownloadDoneTextSucceeded = { a: Int -> "$a Download(s) wurde(n) abgeschlossen" }
    override val statDownloadDoneTextFailed = { a: Int -> "$a Download(s) gescheitert" }
    override val statDownloadDoneTextMix = { a: Int, b: Int -> "$a erfolgreich abgeschlossen, $b gescheitert" }
    override val statDownloadDoneLineSucceeded = { a: String -> "Abgeschlossen: $a" }
    override val statDownloadDoneLineFailed = { a: String -> "Gescheitert: $a" }
    override val downloadRemoveDialogTitle = "Download entfernen"
    override val downloadRemoveDialogMessage = { a: String -> "$a aus der Downloadliste entfernen?" }
    override val downloadRemoveDialogMessage2 = { a: Int -> "$a Downloads aus der Downloadliste entfernen?" }
    override val downloadRemoveDialogCheckText = "Bilddateien löschen"
    override val statDownloadActionStopAll = "Alle stopppen"
    override val defaultDownloadLabelName = "Standard"
    override val downloadMoveDialogTitle = "Verschieben"
    override val downloadLabels = "Download-Etikette"
    override val downloadStartAll = "Alle starten"
    override val downloadStopAll = "Alle stoppen"
    override val downloadServiceLabel = "EhViewer-Download-Dienst"
    override val downloadSpeedText = { a: String -> a }
    override val downloadSpeedText2 = { a: String, b: String -> "$a, noch $b übrig" }
    override val rememberDownloadLabel = "Download-Etikette merken"
    override val defaultDownloadLabel = "Standard-Download-Etikette"
    override val addedToDownloadList = "Zu Download-Liste hinzugefügt"
    override val add = "Hinzufügen"
    override val newLabelTitle = "Neue Etikette"
    override val labelTextIsEmpty = "Inhalt der Etikette erforderlich"
    override val labelTextIsInvalid = "\"Standard\" ist keine valide Etikett"
    override val labelTextExist = "Sie bereits besteht"
    override val renameLabelTitle = "Etikett umbenennen"
    override val noHistory = "Deiner Lesungsverlauf wird hier angezeigt."
    override val clearAll = "Verlaufdaten löschen"
    override val clearAllHistory = "Verlaufdaten löschen?"
    override val filter = "Blocker"
    override val filterTitle = "Titel"
    override val filterUploader = "Uploader"
    override val filterTag = "Etikett"
    override val filterTagNamespace = "Etikettsnamensraum"
    override val deleteFilter = { a: String -> "Blocker \"$a\" entfernen?" }
    override val showDefinition = "Definition anzeigen"
    override val addFilter = "Blocker erstellen"
    override val filterText = "Blocker-Text"
    override val filterTip = "Die blockierten Galerien wurde in EHentai nicht angezeigt.\n\nTitel-Blocker: die Galerien, deren Titel das Wort enthalten, ausschließen.\n\nUploader-Blocker: Die vom Uploader hochgeladen Galerien ausschließen.\n\nEtikett-Blocker: Die Galerien, die die Etikett haben, ausschließen. Es wird länger dauern, Galerieliste zu laden.\n\nEtikettnamensraum-Blocker: Die Galerien, die den Etikettnamensraum haben, ausschließen. Es wird länger dauern, Galerieliste zu laden."
    override val uConfig = "EHentai-Einstellungen"
    override val applyTip = "Zum Speichern der Einstellungen auf Häkchen tippen"
    override val shareImage = "Das Bild teilen"
    override val imageSaved = { a: String -> "Das Bild wurde zu $a gespeichert" }
    override val settingsEh = "EH"
    override val settingsEhSignOut = "Abmelden"
    override val settingsUConfig = "EHentai-Einstellungen"
    override val settingsUConfigSummary = "Einstellung auf der Webseite EHentais"
    override val settingsMyTags = "Gefolgte Etiketten"
    override val settingsMyTagsSummary = "Die gefolgten Etiketten in EHentai-Webseite verwalten."
    override val settingsEhGallerySite = "Galerie-Seite"
    override val settingsEhLaunchPage = "Standard-Bildschirm nach App-Start"
    override val settingsEhListMode = "Liste-Ansicht"
    override val settingsEhListModeDetail = "Details"
    override val settingsEhListModeThumb = "Miniaturbild"
    override val settingsEhDetailSize = "Größe der Details"
    override val settingsEhDetailSizeLong = "Lange"
    override val settingsEhDetailSizeShort = "Kurz"
    override val settingsAdvancedAppLanguageTitle = "Sprache der App (Language)"
    override val torrentCount = { a: Int -> "Torrent ($a)" }
    override val settingsEhShowJpnTitle = "Japanische Titel anzeigen"
    override val settingsEhFilter = "Galerie-Blocker"
    override val settingsEhFilterSummary = "Nach Titel, Uploader order Etiketten die unerwünschten Galerien verstecken"
    override val settingsDownload = "Download"
    override val settingsDownloadDownloadLocation = "Downloadziel"
    override val settingsDownloadCantGetDownloadLocation = "Downloadziel konnte nicht geladen werden"
    override val settingsDownloadMediaScan = "Medienscan erlauben"
    override val settingsDownloadMediaScanSummaryOn = "Du solltest deine Galerie-Apps verstecken"
    override val settingsDownloadMediaScanSummaryOff = "Meisten Galerie-Apps ignorieren die Bilder im Downloadpfad"
    override val settingsDownloadConcurrency = "Multi-Thread-Download"
    override val settingsDownloadConcurrencySummary = { a: Int -> "Bis zu $a Bild(er)" }
    override val settingsDownloadPreloadImage = "Bilder vorabladen"
    override val settingsDownloadPreloadImageSummary = { a: Int -> "Die nächste $a Bilder vorabladen" }
    override val settingsDownloadDownloadOriginImage = "Originale Bilder herunterladen"
    override val settingsDownloadDownloadOriginImageSummary = "Wenn es aktiviert wird, wird der 509-Fehler dir schneller widerfahren"
    override val settingsDownloadRestoreDownloadItems = "Download-Elemente wiederherstellen"
    override val settingsDownloadRestoreDownloadItemsSummary = "Alle Download-Elemente im Downloadpfad wiederherstellen"
    override val settingsDownloadRestoreNotFound = "Keine zu wiederhestellenden Elemente"
    override val settingsDownloadRestoreFailed = "Wiederherstellung gescheitert"
    override val settingsDownloadRestoreSuccessfully = { a: Int -> "$a Element(e) wiederhergestellt" }
    override val settingsDownloadCleanRedundancy = "Unnötige Dateien löschen"
    override val settingsDownloadCleanRedundancySummary = "Bilddateien, die sich im Downloadpfad befinden, aber nicht in Downloadliste, löschen"
    override val settingsDownloadCleanRedundancyNoRedundancy = "Keine zu löschenden Dateien gefunden"
    override val settingsDownloadCleanRedundancyDone = { a: Int -> "Reinigung abgeschlossen. $a Datei(en) wurde(n) gelöscht." }
    override val settingsAdvanced = "Erweiterte Optionen"
    override val settingsAdvancedSaveParseErrorBody = "HTML-Datei beim Parsing-Fehler speichern"
    override val settingsAdvancedSaveParseErrorBodySummary = "Die Datei könnte etwas Privates enthalten"
    override val settingsAdvancedSaveCrashLog = "Crash-Bericht speichern"
    override val settingsAdvancedSaveCrashLogSummary = "Der Bericht hilft dem Entwickler dabei, Fehler schnell zu beheben."
    override val settingsAdvancedDumpLogcat = "Logcat-Protokoll speichern"
    override val settingsAdvancedDumpLogcatSummary = "Logcat-Protokolldatei auf externem Speicher speichern"
    override val settingsAdvancedDumpLogcatFailed = "Speichern gescheitert"
    override val settingsAdvancedDumpLogcatTo = { a: String -> "Protokolldatei wurde auf $a gespeichert." }
    override val cloudFavorites = "Cloud-Favoriten"
    override val localFavorites = "Lokale Favoriten"
    override val searchBarHint = { a: String -> "$a durchsuchen" }
    override val favoritesTitle = { a: String -> a }
    override val favoritesTitle2 = { a: String, b: String -> "$a - $b" }
    override val deleteFavoritesDialogTitle = "Aus Favoriten löschen"
    override val deleteFavoritesDialogMessage = { a: Int -> "$a Elemente aus Favoriten löschen?" }
    override val moveFavoritesDialogTitle = "Favoriten verschieben"
    override val defaultFavoritesCollection = "Standard-Favoriten"
    override val letMeSelect = "Manuell auswählen"
    override val collections = "Kollektionen"
    override val errorSomethingWrongHappened = "Ein Fehler ist aufgetreten"
    override val fromTheFuture = "Von der Zukunft"
    override val justNow = "Gerade"
    override val yesterday = "Gestern"
    override val someDaysAgo = { a: Int -> "Vor $a Tagen" }
    override val archive = "Archivdateien"
    override val noArchives = "Keine Archivdatei"
    override val downloadArchiveStarted = "Archivdatei wird heruntergeladen"
    override val downloadArchiveFailure = "Fehler beim Herunterladen der Archivdatei"
    override val downloadArchiveFailureNoHath = "H@H-Klient ist für das Herunterladen der Archivdateien erforderlich"
    override val settingsPrivacy = "Datenschutzoptionen"
    override val settingsPrivacySecure = "Screenshot verhindern"
    override val settingsPrivacySecureSummary = "Screenshots werden verhindert. Inhalt der App wird in Aktuelle Apps-Liste nicht angezeigt."
    override val appWaring = "Inhalt dieser App kommt aus dem Internet, von dem einige dir körperlichen oder emotionalen Schaden zufügen kann. Du hast es wirklich erfahrt und möchtest immer noch fortsetzen."
    override val errorUsernameCannotEmpty = "Gibt den Nutzername ein"
    override val errorPasswordCannotEmpty = "Gibt das Passwort ein"
    override val guestMode = "Anmeldung überspringen"
    override val signInFailed = "Anmeldung fehlgeschlagen"
    override val clipboardGalleryUrlSnackMessage = "Ein Link von einen Galerie wurde in Zwischenablage erkennt."
    override val clipboardGalleryUrlSnackAction = "Gehen"
    override val settingsAdvancedReadCacheSize = "Größe des Lesezwischenspeichers"
    override val settingsAboutDeclarationSummary = "EhViewer verbindet sich in keiner Weise mit E-Hentai.org."
    override val settingsAboutSource = "Quellcode"
    override val settingsAboutVersion = "Versionnummer"
    override val settingsAboutCheckForUpdates = "Auf Update überprüfen"
    override val cantReadTheFile = "Datei kann nicht gelesen werden"
    override val appLanguageSystem = "Sprache des Systems (Standard)"
    override val pleaseWait = "Bitte warte"
    override val settingsAdvancedExportData = "Daten exportieren"
    override val settingsAdvancedExportDataSummary = "Daten, z. B. Downloadliste, Sofortsucheliste, zum externen Speicher speichern"
    override val settingsAdvancedExportDataTo = { a: String -> "Daten wurden zu $a exportiert" }
    override val settingsAdvancedExportDataFailed = "Datenexport gescheitert"
    override val settingsAdvancedImportData = "Daten importieren"
    override val settingsAdvancedImportDataSummary = "Gespeicherte Daten wiederherstellen"
    override val settingsAdvancedImportDataSuccessfully = "Daten wurden erfolgreich importiert"
    override val settingsAbout = "Über die App"
    override val settingsAboutAuthor = "Entwickler"
    override val settingsAboutLatestRelease = "Aktuelle Version"
    override val downloadResetReadingProgress = "Lesefortschritte zurücksetzen"
    override val resetReadingProgressMessage = "Lesefortschritte aus allen heruntergeladenen Galerie zurücksetzen?"
    override val settingsEhIdentityCookiesSigned = "Wenn jemand die folgenden Informationen hat, kann er sich als du anmelden. <br><b>ALSO GEHEIM HALTEN!</b>"
    override val settingsEhIdentityCookiesGuest = "Du hast dich noch nicht angemeldet."
    override val settingsEhShowGalleryPages = "Galerieseitenzahl anzeigen"
    override val settingsEhShowGalleryPagesSummary = "Die Galerieseitenzahle in der Galerieliste anzeigen"
    override val darkThemeFollowSystem = "System folgen"
}
